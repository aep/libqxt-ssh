!win32:VERSION = 0.3
win32: CONFIG   += dll
MOC_DIR          = .moc
OBJECTS_DIR      = .obj
DESTDIR          = ../../deploy/libs/
TEMPLATE         = lib

incs.path      = $${include.path}/$${CLEAN_TARGET}/

contains(CONVENIENCE, $${CLEAN_TARGET}){
    for(header,HEADERS){
        incs.files += $$header
    }
    incs.files += ../../deploy/include/$${CLEAN_TARGET}/*
}

LIBS += -L../../deploy/libs/

INSTALLS = target incs
include(../../deploy/qt/qxt.prf)



defineReplace(qxtLibraryTarget) {
   unset(LIBRARY_NAME)
   LIBRARY_NAME = $$1
   mac:!static:contains(QT_CONFIG, qt_framework) {
      QMAKE_FRAMEWORK_BUNDLE_NAME = $$LIBRARY_NAME
      export(QMAKE_FRAMEWORK_BUNDLE_NAME)
   }
   contains(TEMPLATE, .*lib):CONFIG(debug, debug|release) {
      !debug_and_release|build_pass {
          mac:RET = $$member(LIBRARY_NAME, 0)_debug
          else:win32:RET = $$member(LIBRARY_NAME, 0)d
      }
   }
   isEmpty(RET):RET = $$LIBRARY_NAME
   return($$RET)
}

TARGET           = $$qxtLibraryTarget($$CLEAN_TARGET)

