Index: VERSION
===================================================================
RCS file: /cvsroot/doxygen/VERSION,v
retrieving revision 1.215
diff -r1.215 VERSION
1c1
< 1.4.5-20051109
---
> 1.5.1-20070219
Index: src/htmlgen.cpp
===================================================================
RCS file: /cvsroot/doxygen/src/htmlgen.cpp,v
retrieving revision 1.144
diff -r1.144 htmlgen.cpp
912c912
<   t << "<h2>";
---
>   t << "<h3>";
917c917
<   t << "</h2>" << endl;
---
>   t << "</h3>" << endl;
924c924
<     case SectionInfo::Page:          t << "<h1>"; break;
---
>     case SectionInfo::Page:          t << "<h1  align=\"center\" >"; break;
1184c1184
<     t << "<tr><td colspan=\"2\"><br><h2>";
---
>     t << "<tr><td colspan=\"2\"><br><h3>";
1197c1197
<     t << "</h2></td></tr>" << endl;
---
>     t << "</h3></td></tr>" << endl;
1267,1269c1267
<   DBG_HTML(t << "<!-- startMemberDoc -->" << endl;)
<   //t << "<p>" << endl;
<  
---
>   DBG_HTML(t << "<!-- startMemberDoc -->" << endl;) 
1271,1275c1269
<   //t << "<table>" << endl;
<   //t << "  <tr>" << endl;
<   //t << "    <td>" << endl;
<   //t << "      <table class=\"memproto\">" << endl;
<   t << "<div class=\"memproto\">" << endl;
---
>   t << "<div class=\"fn\">" << endl;
1282,1283c1276
<   //t << "        <tr>" << endl;
<   //t << "          <td class=\"memtemplate\" colspan=\"5\">";
---
> 
1299c1292
<   t << "      <table class=\"memname\">" << endl;
---
> //   t << "      <table>" << endl;
1301,1302c1294,1295
<   t << "        <tr>" << endl;
<   t << "          <td class=\"memname\">";
---
> //   t << "        <tr>" << endl;
>   t << "          <span class=\"memname\">";
1308c1301
<   t << "          </td>" << endl;
---
>   t << "          </span>" << endl;
1314,1316c1307
<   t << "          <td>";
<   if (openBracket) t << "(";
<   t << "</td>" << endl;
---
>    if (openBracket) t << "(";
1321,1322c1312
<   if (first)
<   {
---
> 
1324,1335c1314,1315
<     t << "          <td class=\"paramtype\">";
<   }
<   else
<   {
<     DBG_HTML(t << "<!-- startParameterType -->" << endl;)
<     t << "        <tr>" << endl;
<     t << "          <td class=\"paramkey\">";
<     if (key) t << key;
<     t << "</td>" << endl;
<     t << "          <td></td>" << endl;
<     t << "          <td class=\"paramtype\">";
<   }
---
>     t << "          <span class=\"paramtype\">";
> 
1341c1321
<   t << "&nbsp;</td>" << endl;
---
>   t << "&nbsp;</span>" << endl;
1347c1327
<   t << "          <td class=\"paramname\">";
---
>   t << "          <span class=\"paramname\">";
1353,1379c1333,1335
<   if (last)
<   {
<     if (emptyList)
<     {
<       t << "          </td>" << endl;
<       t << "          <td>";
<       if (closeBracket) t << "&nbsp;)";
<       t << "&nbsp;</td>" << endl;
<       t << "          <td width=\"100%\">";
<     }
<     else
<     {
<       t << "</td><td>&nbsp;</td>" << endl;
<       t << "        </tr>" << endl;
<       t << "        <tr>" << endl;
<       t << "          <td></td>" << endl;
<       t << "          <td>";
<       if (closeBracket) t << ")";
<       t << "</td>" << endl;
<       t << "          <td></td><td></td><td width=\"100%\">";
<     }
<   }
<   else
<   {
<     t << "</td>" << endl;
<     t << "        </tr>" << endl;
<   }
---
> 
>     t << "</span>" << endl;
> if (last)  t << ")";
1385,1386c1341
<   t << "</td>" << endl;
<   t << "        </tr>" << endl;
---
> 
1392,1399d1346
<   if (!hasArgs)
<   {
<     t << "        </tr>" << endl;
<   }
<   t << "      </table>" << endl;
<   //t << "    </td>" << endl;
<   //t << "  </tr>" << endl;
<   //t << "</table>" << endl;
1400a1348
>   t << "" << endl;
1493c1441
<   t << endl << "</div>" << endl << "</div><p>" << endl; 
---
>   t << endl << "</p></div>" << endl << "</div><!-- memitem --><br/>" << endl; 
1591c1539
<     t << "  </ul>\n";
---
>     t << "</ul>\n";
Index: src/htmlgen.h
===================================================================
RCS file: /cvsroot/doxygen/src/htmlgen.h,v
retrieving revision 1.86
diff -r1.86 htmlgen.h
62c62
<     void startTitle() { t << "<h1>"; }
---
>     void startTitle() { t << "<h1  align=\"center\">"; }
88,89c88,89
<     void startTypewriter() { t << "<code>"; }
<     void endTypewriter()   { t << "</code>"; }
---
>     void startTypewriter() { t << "<pre>"; }
>     void endTypewriter()   { t << "</pre>"; }
152,155c152,155
<     void startSubsection()    { t << "<h2>"; }
<     void endSubsection()      { t << "</h2>" << endl; }
<     void startSubsubsection() { t << "<h3>"; }
<     void endSubsubsection()   { t << "</h3>" << endl; }
---
>     void startSubsection()    { t << "<h4>"; }
>     void endSubsection()      { t << "</h4>" << endl; }
>     void startSubsubsection() { t << "<h4>"; }
>     void endSubsubsection()   { t << "</h4>" << endl; }
230a231,235
> 
> 
> 
> 
> 
Index: src/htmlhelp.cpp
===================================================================
RCS file: /cvsroot/doxygen/src/htmlhelp.cpp,v
retrieving revision 1.49
diff -r1.49 htmlhelp.cpp
31a32,33
> 
> #include <iostream>
120,121c122,127
<     //printf(">>>>>>>>> HtmlHelpIndex::addItem(%s,%s,%s,%s)\n",
<     //      level1,level2,url,anchor);
---
> 
> 
> 
> if (reversed)return;//!!
> 
> 
127a134
> 
133,158c140
< /*! Writes the sorted list of index items into a html like list.
<  *
<  *  An list of calls with <code>name = level1,level2</code> as follows:
<  *  <pre>
<  *    a1,b1
<  *    a1,b2
<  *    a2,b1
<  *    a2,b2
<  *    a3
<  *    a4,b1
<  *  </pre>
<  *
<  *  Will result in the following list:
<  *
<  *  <pre>
<  *    a1       -> link to url if hasLink==TRUE
<  *      b1     -> link to url#anchor
<  *      b2     -> link to url#anchor
<  *    a2       -> link to url if hasLink==TRUE
<  *      b1     -> link to url#anchor
<  *      b2     -> link to url#anchor
<  *    a3       -> link to url if hasLink==TRUE
<  *    a4       -> link to url if hasLink==TRUE
<  *      b1     -> link to url#anchor 
<  *  </pre>
<  */
---
> 
160,177c142,195
< {
<   IndexFieldListIterator ifli(*list);
<   IndexField *f;
<   QCString lastLevel1;
<   bool level2Started=FALSE;
<   for (;(f=ifli.current());++ifli)
<   {
<     QCString level1,level2;
<     int i;
<     if ((i=f->name.find('?'))!=-1)
<     {
<       level1 = f->name.left(i);
<       level2 = f->name.right(f->name.length()-i-1); 
<     }
<     else
<     {
<       level1  = f->name.copy();
<     }
---
> 	{
> 	IndexFieldListIterator ifli(*list);
> 	IndexField *f;
> 	QCString lastLevel1;
> 	bool firstrun=true;
> 	for (;(f=ifli.current());++ifli)
> 		{
> 
> 		
> 
> 
> 		QCString level1,level2;
> 		int i;
> 		if ((i=f->name.find('?'))!=-1)
> 			{
> 			level1 = f->name.left(i);
> 			level2 = f->name.right(f->name.length()-i-1); 
> 			}
> 		else
> 			{
> 			level1  = f->name.copy();
> 			}
> 
> 		
>  		if(level2[0]=='~')continue;
> 		if(level1[level1.length ()-1]=='h' && level1[level1.length ()-2]=='.')continue;
> 
> 		if (level1!=lastLevel1)
> 			{
> 			if(firstrun)
> 				{
> 				firstrun=false;
> 				}
> 			else
> 				{
> 				t << "</section>\n\n";
> 				}
> 			
> 			t << "<section ref=\""<<f->url<< Doxygen::htmlFileExtension<< "\" title=\""<<level1 <<"\"> \n";
> 			t << "\t<keyword ref=\""<<f->url<< Doxygen::htmlFileExtension << "\">" <<level1<< "</keyword>\n"; 
> 
> 				}
> 
> 		
> 
> 
> 		if(level1!=level2)
> 			{
> 			t << "\t<keyword ref=\""<<f->url<< Doxygen::htmlFileExtension;
> 			if (!f->anchor.isEmpty() ) t << "#" << f->anchor;  
> 			t << "\">"<<level2<< "</keyword>\n"; 
> 			}
> 		
> 		lastLevel1 = level1.copy();
179,255c197,198
<     if (level1!=lastLevel1)
<     { // finish old list at level 2
<       if (level2Started) t << "  </UL>" << endl;
<       level2Started=FALSE;
<     
<       // <Antony>
<       // Added this code so that an item with only one subitem is written
<       // without any subitem.
<       // For example:
<       //   a1, b1 -> will create only a1, not separate subitem for b1
<       //   a2, b2
<       //   a2, b3
<       QCString nextLevel1;
<       IndexField* fnext = ++ifli;
<       if (fnext)
<       {
<         nextLevel1 = fnext->name.left(fnext->name.find('?'));
<         --ifli;
<       }
<       if (level1 != nextLevel1)
<       {
<         level2 = "";
<       }
<       // </Antony>
< 
<       if (level2.isEmpty())
<       {
<         t << "  <LI><OBJECT type=\"text/sitemap\">";
<         t << "<param name=\"Local\" value=\"" << f->url << Doxygen::htmlFileExtension;
<         if (!f->anchor.isEmpty() && f->reversed) t << "#" << f->anchor;  
<         t << "\">";
<         t << "<param name=\"Name\" value=\"" << level1 << "\">"
<            "</OBJECT>\n";
<       }
<       else
<       {
<         if (f->link)
<         {
<           t << "  <LI><OBJECT type=\"text/sitemap\">";
<           t << "<param name=\"Local\" value=\"" << f->url << Doxygen::htmlFileExtension;
<           if (!f->anchor.isEmpty() && f->reversed) t << "#" << f->anchor;  
<           t << "\">";
<           t << "<param name=\"Name\" value=\"" << level1 << "\">"
<                "</OBJECT>\n";
<         }
<         else
<         {
<           t << "  <LI><OBJECT type=\"text/sitemap\">";
<           t << "<param name=\"See Also\" value=\"" << level1 << "\">";
<           t << "<param name=\"Name\" value=\"" << level1 << "\">"
<                "</OBJECT>\n";
<         }
<       }
<     }
<     if (!level2Started && !level2.isEmpty())
<     { // start new list at level 2
<       t << "  <UL>" << endl;
<       level2Started=TRUE;
<     }
<     else if (level2Started && level2.isEmpty())
<     { // end list at level 2
<       t << "  </UL>" << endl;
<       level2Started=FALSE;
<     }
<     if (level2Started)
<     {
<       t << "    <LI><OBJECT type=\"text/sitemap\">";
<       t << "<param name=\"Local\" value=\"" << f->url << Doxygen::htmlFileExtension;
<       if (!f->anchor.isEmpty()) t << "#" << f->anchor;  
<       t << "\">";
<       t << "<param name=\"Name\" value=\"" << level2 << "\">"
<          "</OBJECT>\n";
<     }
<     lastLevel1 = level1.copy();
<   } 
<   if (level2Started) t << "  </UL>" << endl;
< }
---
> 		} 
> 	}
269c212
<   cf = kf = 0;
---
>   kf = 0;
283,287c226,228
< /*! This will create a contents file (index.hhc) and a index file (index.hhk)
<  *  and write the header of those files. 
<  *  It also creates a project file (index.hhp)
<  *  \sa finalize()
<  */
---
> 
> 
> 
289,386c230,248
< {
<   /* open the contents file */
<   QCString fName = Config_getString("HTML_OUTPUT") + "/index.hhc";
<   cf = new QFile(fName);
<   if (!cf->open(IO_WriteOnly))
<   {
<     err("Could not open file %s for writing\n",fName.data());
<     exit(1);
<   }
<   /* Write the header of the contents file */
<   cts.setDevice(cf);
< #if QT_VERSION >= 200
<   cts.setEncoding(QTextStream::Latin1);
< #endif
<   cts << "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\n"
<          "<HTML><HEAD></HEAD><BODY>\n"
<          "<OBJECT type=\"text/site properties\">\n"
<          "<param name=\"FrameName\" value=\"right\">\n"
<          "</OBJECT>\n"
<          "<UL>\n";
<   
<   /* open the contents file */
<   fName = Config_getString("HTML_OUTPUT") + "/index.hhk";
<   kf = new QFile(fName);
<   if (!kf->open(IO_WriteOnly))
<   {
<     err("Could not open file %s for writing\n",fName.data());
<     exit(1);
<   }
<   /* Write the header of the contents file */
<   kts.setDevice(kf);
< #if QT_VERSION >= 200
<   kts.setEncoding(QTextStream::Latin1);
< #endif
<   kts << "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\n"
<          "<HTML><HEAD></HEAD><BODY>\n"
<          "<OBJECT type=\"text/site properties\">\n"
<          "<param name=\"FrameName\" value=\"right\">\n"
<          "</OBJECT>\n"
<          "<UL>\n";
< 
<   /* language codes for Html help
<      0x405 Czech
<      0x406 Danish
<      0x413 Dutch
<      0xC09 English (Australia)
<      0x809 English (Britain)
<      0x1009 English (Canada)
<      0x1809 English (Ireland)
<      0x1409 English (New Zealand)
<      0x1C09 English (South Africa)
<      0x409 English (United States)
<      0x40B Finnish
<      0x40C French
<      0x407 German
<      0x408 Greece
<      0x40E Hungarian
<      0x410 Italian
<      0x814 Norwegian
<      0x415 Polish
<      0x816 Portuguese(Portugal)
<      0x416 Portuguese(Brazil)
<      0x419 Russian
<      0x80A Spanish(Mexico)
<      0xC0A Spanish(Modern Sort)
<      0x40A Spanish(Traditional Sort)
<      0x41D Swedish
<      0x41F Turkey
<      0x411 Japanese
<      0x412 Korean
<      0x804 Chinese (PRC)
<      0x404 Chinese (Taiwan)
<   */
<   s_languageDict.setAutoDelete(TRUE);
<   s_languageDict.clear();
<   s_languageDict.insert("czech",       new QCString("0x405 Czech"));
<   s_languageDict.insert("danish",      new QCString("0x406 Danish"));
<   s_languageDict.insert("dutch",       new QCString("0x413 Dutch"));
<   s_languageDict.insert("finnish",     new QCString("0x40B Finnish"));
<   s_languageDict.insert("french",      new QCString("0x40C French"));
<   s_languageDict.insert("german",      new QCString("0x407 German"));
<   s_languageDict.insert("greece",      new QCString("0x408 Greece"));
<   s_languageDict.insert("hungarian",   new QCString("0x40E Hungarian"));
<   s_languageDict.insert("italian",     new QCString("0x410 Italian"));
<   s_languageDict.insert("norwegian",   new QCString("0x814 Norwegian"));
<   s_languageDict.insert("polish",      new QCString("0x415 Polish"));
<   s_languageDict.insert("portugese",   new QCString("0x816 Portuguese(Portugal)"));
<   s_languageDict.insert("brazil",      new QCString("0x416 Portuguese(Brazil)"));
<   s_languageDict.insert("russian",     new QCString("0x419 Russian"));
<   s_languageDict.insert("spanish",     new QCString("0x40A Spannish(Traditional Sort)"));
<   s_languageDict.insert("swedish",     new QCString("0x41D Swedish"));
<   s_languageDict.insert("turkey",      new QCString("0x41F Turkey"));
<   s_languageDict.insert("japanese",    new QCString("0x411 Japanese"));
<   s_languageDict.insert("japanese-en", new QCString("0x411 Japanese"));
<   s_languageDict.insert("korean",      new QCString("0x412 Korean"));
<   s_languageDict.insert("chinese",     new QCString("0x804 Chinese (PRC)"));
<   s_languageDict.insert("chinese-traditional", new QCString("0x404 Chinese (Taiwan)"));
< }
---
> 	{
> 	/* open the contents file */
> 	QCString fName = Config_getString("HTML_OUTPUT") + "/index.dcf";
> 	kf = new QFile(fName);
> 	if (!kf->open(IO_WriteOnly))
> 	{
> 		err("Could not open file %s for writing\n",fName.data());
> 		exit(1);
> 	}
> 	/* Write the header of the contents file */
> 	kts.setDevice(kf);
> 	#if QT_VERSION >= 200
> 		kts.setEncoding(QTextStream::Latin1);
> 	#endif
> 
> 	kts << 	"<assistantconfig version=\"3.2.0\">\n"
> 		"<DCF ref=\"./annotated.html\" icon=\"handbook.png\" imagedir=\".\" title=\"Qxt Reference Documentation\">\n\n"
> 		"<section ref=\"./annotated.html\" title=\"Classes\">\n\n";
> 	}
390,401c252,255
< {
<   if (!theTranslator->idLanguage().isEmpty())
<   {
<     QCString *s = s_languageDict[theTranslator->idLanguage()];
<     if (s)
<     {
<       return *s;
<     }
<   }
<   // default language
<   return "0x409 English (United States)";
< }
---
> 	{
> 	// default language
> 	return "0x409 English (United States)";
> 	}
406,459c260,261
< {
<   /* Write the project file */
<   QCString fName = Config_getString("HTML_OUTPUT") + "/index.hhp";
<   QFile f(fName);
<   if (f.open(IO_WriteOnly))
<   {
<     QTextStream t(&f);
< #if QT_VERSION >= 200
<     t.setEncoding(QTextStream::Latin1);
< #endif
< 
<    
<     
<     QCString indexName="index"+Doxygen::htmlFileExtension;
<     if (Config_getBool("GENERATE_TREEVIEW")) indexName="main"+Doxygen::htmlFileExtension;
<     t << "[OPTIONS]\n";
<     if (!Config_getString("CHM_FILE").isEmpty())
<     {
<       t << "Compiled file=" << Config_getString("CHM_FILE") << "\n";
<     }
<     t << "Compatibility=1.1\n"
<          "Full-text search=Yes\n"
<          "Contents file=index.hhc\n"
<          "Default Window=main\n"
<          "Default topic=" << indexName << "\n"
<          "Index file=index.hhk\n"
<          "Language=" << getLanguageString() << endl;
<     if (Config_getBool("BINARY_TOC")) t << "Binary TOC=YES\n";
<     if (Config_getBool("GENERATE_CHI")) t << "Create CHI file=YES\n";
<     t << "Title=" << Config_getString("PROJECT_NAME") << endl << endl;
<     
<     t << "[WINDOWS]" << endl;
<     t << "main=\"" << Config_getString("PROJECT_NAME") << "\",\"index.hhc\","
<          "\"index.hhk\",\"" << indexName << "\",\"" << 
<          indexName << "\",,,,,0x23520,,0x387e,,,,,,,,0" << endl << endl;
<     
<     t << "[FILES]" << endl;
<     char *s = indexFiles.first();
<     while (s)
<     {
<       t << s << endl;
<       s = indexFiles.next();
<     }
<     t << "tabs.css" << endl;
<     t << "tab_b.gif" << endl;
<     t << "tab_l.gif" << endl;
<     t << "tab_r.gif" << endl;
<     f.close();
<   }
<   else
<   {
<     err("Could not open file %s for writing\n",fName.data());
<   }
< }
---
> 	{
> 	}
476,497c278,287
<   // end the contents file
<   cts << "</UL>\n";
<   cts.unsetDevice();
<   cf->close();
<   delete cf;
<   
<   index->writeFields(kts);
<   
<   // end the index file
<   kts << "</UL>\n";
<   kts.unsetDevice();
<   kf->close();
<   delete kf;
< 
<   createProjectFile();
<   s_languageDict.clear();
< }
< 
< /*! Increase the level of the contents hierarchy. 
<  *  This will start a new unnumbered HTML list in contents file.
<  *  \sa decContentsDepth()
<  */
---
> 	index->writeFields(kts);
> 	// end the index file
> 	kts << "</section>\n</section></DCF>\n</assistantconfig>\n";
> 	kts.unsetDevice();
> 	kf->close();
> 	delete kf;
> 
> 	//   createProjectFile();
> 	//   s_languageDict.clear();
> 	}
499,508c289,291
< {
<   int i; for (i=0;i<dc+1;i++) cts << "  ";
<   cts << "<UL>\n";
<   return ++dc;
< }
< 
< /*! Decrease the level of the contents hierarchy.
<  *  This will end the unnumber HTML list.
<  *  \sa incContentsDepth()
<  */
---
> 	{
> 	return 0;
> 	}
510,514c293,295
< {
<   int i; for (i=0;i<dc;i++) cts << "  ";
<   cts << "</UL>\n";
<   return --dc;
< }
---
> 	{
> 	return 0;
> 	}
526,552c307
<   // If we're using a binary toc then folders cannot have links. 
<   if(Config_getBool("BINARY_TOC") && isDir) 
<   {
<     ref = 0;
<     anchor = 0;
<   }
<   
<   int i; for (i=0;i<dc;i++) cts << "  ";
<   cts << "<LI><OBJECT type=\"text/sitemap\">";
<   cts << "<param name=\"Name\" value=\"" << name << "\">";
<   if (ref)      // made ref optional param - KPW
<   {
<     cts << "<param name=\"Local\" value=\"" << ref << Doxygen::htmlFileExtension;
<     if (anchor) cts << "#" << anchor;  
<     cts << "\">";
<   }
<   cts << "<param name=\"ImageNumber\" value=\"";
<   if (isDir)  // added - KPW
<   {
<     cts << (int)BOOK_CLOSED ;
<   }
<   else
<   {
<     cts << (int)TEXT;
<   }
<   cts << "\">";
<   cts << "</OBJECT>\n";
---
> 
Index: src/htmlhelp.h
===================================================================
RCS file: /cvsroot/doxygen/src/htmlhelp.h,v
retrieving revision 1.29
diff -r1.29 htmlhelp.h
86,87c86,87
<     QFile *cf,*kf; 
<     QTextStream cts,kts;
---
>     QFile *kf; 
>     QTextStream kts;
Index: src/memberdef.cpp
===================================================================
RCS file: /cvsroot/doxygen/src/memberdef.cpp,v
retrieving revision 1.170
diff -r1.170 memberdef.cpp
217c217
<       ol.startTypewriter();
---
> //       ol.startTypewriter();
219c219
<       ol.endTypewriter();
---
> //       ol.endTypewriter();
1348c1348
<     ol.startTypewriter();
---
> //     ol.startTypewriter();
1350c1350
<     ol.endTypewriter();
---
> //     ol.endTypewriter();
1356c1356
<       ol.startTypewriter();
---
> //       ol.startTypewriter();
1369c1369
<       ol.endTypewriter();
---
> //       ol.endTypewriter();
1375c1375
<       ol.startTypewriter();
---
> //       ol.startTypewriter();
1389c1389
<       ol.endTypewriter();
---
> //       ol.endTypewriter();
1768c1768
<     ol.startTypewriter();
---
> //     ol.startTypewriter();
1809c1809
<     ol.endTypewriter();
---
> //     ol.endTypewriter();
1814c1814
<     ol.startTypewriter();
---
> //     ol.startTypewriter();
1816c1816
<     ol.endTypewriter();
---
> //     ol.endTypewriter();
Index: src/outputgen.h
===================================================================
RCS file: /cvsroot/doxygen/src/outputgen.h,v
retrieving revision 1.87
diff -r1.87 outputgen.h
46a47,51
> 
> 
> 
> 
> 
